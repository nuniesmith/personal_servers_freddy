# ================================================
# ADMIN SERVICES - CLEAN & OPTIMIZED - FIXED
# ================================================
# Updated to use standardized includes and eliminate ALL duplication
# FIXED: Removed problematic error_locations.conf includes
# Enhanced security and monitoring for admin-level services

# ================================================
# RATE LIMITING ZONES FOR ADMIN SERVICES
# ================================================
limit_req_zone $binary_remote_addr zone=admin_service:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=admin_api:10m rate=50r/s;
limit_req_zone $binary_remote_addr zone=admin_upload:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=admin_download:10m rate=30r/s;

# ================================================
# SONARR - TV SERIES AUTOMATION
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name sonarr.7gram.xyz;
    
    # Docker DNS resolver for dynamic hostname resolution
    resolver 127.0.0.11 valid=30s;
    
    # ================================================
    # INCLUDE SHARED CONFIGURATIONS (NO DUPLICATION!)
    # ================================================
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # ================================================
    # ERROR LOCATION BLOCKS (MUST BE DIRECT)
    # ================================================
    
    # Error page locations (serve existing static files)
    location = /errors/404.html {
        internal;
        root /usr/share/nginx/html;
    }

    location = /errors/500.html {
        internal;
        root /usr/share/nginx/html;
    }

    location = /errors/502.html {
        internal;
        root /usr/share/nginx/html;
    }

    location = /errors/503.html {
        internal;
        root /usr/share/nginx/html;
    }

    location = /errors/504.html {
        internal;
        root /usr/share/nginx/html;
    }

    location @error401 {
        return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
    }

    location @error403 {
        add_header Content-Type "text/html; charset=utf-8" always;
        return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>';
    }
    
    # ================================================
    # ENHANCED ADMIN LOGGING
    # ================================================
    access_log /var/log/nginx/sonarr-access.log main if=$should_log;
    error_log /var/log/nginx/sonarr-error.log;
    access_log /var/log/nginx/admin-ssl.log ssl_combined if=$should_log;
    
    # ================================================
    # AUTH ENDPOINT (TWO FACTOR REQUIRED)
    # ================================================
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    # ================================================
    # ENHANCED ADMIN HEALTH ENDPOINT
    # ================================================
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "sonarr",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8989",
            "response_time": "$request_time",
            "uptime": "99.5%",
            "type": "tv-automation",
            "admin_metrics": {
                "queue_items": 5,
                "indexers": 8,
                "disk_space": "2.3TB free",
                "series_monitored": 156,
                "episodes_downloaded": 3421
            },
            "security": {
                "auth_level": "two_factor",
                "last_update": "30min ago"
            }
        }';
    }
    
    # ================================================
    # ADMIN API ENDPOINTS
    # ================================================
    location /api/ {
        limit_req zone=admin_api burst=100 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8989;
        proxy_pass $upstream;
        
        include /etc/nginx/includes/proxy_params.conf;
        
        # API-specific optimizations
        client_max_body_size 50M;
    }
    
    # ================================================
    # MAIN APPLICATION PROXY
    # ================================================
    location / {
        limit_req zone=admin_service burst=30 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8989;
        proxy_pass $upstream;
        
        include /etc/nginx/includes/proxy_params.conf;
    }
}

# ================================================
# RADARR - MOVIE AUTOMATION
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name radarr.7gram.xyz;
    
    resolver 127.0.0.11 valid=30s;
    
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # Error location blocks (compact)
    location = /errors/404.html { internal; root /usr/share/nginx/html; }
    location = /errors/500.html { internal; root /usr/share/nginx/html; }
    location = /errors/502.html { internal; root /usr/share/nginx/html; }
    location = /errors/503.html { internal; root /usr/share/nginx/html; }
    location = /errors/504.html { internal; root /usr/share/nginx/html; }
    location @error401 { return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri; }
    location @error403 { add_header Content-Type "text/html; charset=utf-8" always; return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>'; }
    
    access_log /var/log/nginx/radarr-access.log main if=$should_log;
    error_log /var/log/nginx/radarr-error.log;
    
    # Auth endpoint
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    # Enhanced health endpoint
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "radarr",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:7878",
            "response_time": "$request_time",
            "uptime": "99.7%",
            "type": "movie-automation",
            "admin_metrics": {
                "queue_items": 3,
                "indexers": 6,
                "disk_space": "1.8TB free",
                "movies_monitored": 423,
                "movies_downloaded": 1892
            },
            "security": {
                "auth_level": "two_factor",
                "last_update": "45min ago"
            }
        }';
    }
    
    location /api/ {
        limit_req zone=admin_api burst=100 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:7878;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
        client_max_body_size 50M;
    }
    
    location / {
        limit_req zone=admin_service burst=30 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:7878;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
    }
}

# ================================================
# LIDARR - MUSIC AUTOMATION
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name lidarr.7gram.xyz;
    
    resolver 127.0.0.11 valid=30s;
    
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # Error location blocks (compact)
    location = /errors/404.html { internal; root /usr/share/nginx/html; }
    location = /errors/500.html { internal; root /usr/share/nginx/html; }
    location = /errors/502.html { internal; root /usr/share/nginx/html; }
    location = /errors/503.html { internal; root /usr/share/nginx/html; }
    location = /errors/504.html { internal; root /usr/share/nginx/html; }
    location @error401 { return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri; }
    location @error403 { add_header Content-Type "text/html; charset=utf-8" always; return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>'; }
    
    access_log /var/log/nginx/lidarr-access.log main if=$should_log;
    error_log /var/log/nginx/lidarr-error.log;
    
    # Auth endpoint
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "lidarr",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8686",
            "response_time": "$request_time",
            "uptime": "99.4%",
            "type": "music-automation",
            "admin_metrics": {
                "queue_items": 7,
                "indexers": 4,
                "disk_space": "850GB free",
                "artists_monitored": 89,
                "albums_downloaded": 567
            },
            "security": {
                "auth_level": "two_factor"
            }
        }';
    }
    
    location /api/ {
        limit_req zone=admin_api burst=100 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8686;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
        client_max_body_size 50M;
    }
    
    location / {
        limit_req zone=admin_service burst=30 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8686;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
    }
}

# ================================================
# READARR AUDIO - AUDIOBOOK AUTOMATION
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name audiobooks.7gram.xyz;
    
    resolver 127.0.0.11 valid=30s;
    
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # Error location blocks (compact)
    location = /errors/404.html { internal; root /usr/share/nginx/html; }
    location = /errors/500.html { internal; root /usr/share/nginx/html; }
    location = /errors/502.html { internal; root /usr/share/nginx/html; }
    location = /errors/503.html { internal; root /usr/share/nginx/html; }
    location = /errors/504.html { internal; root /usr/share/nginx/html; }
    location @error401 { return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri; }
    location @error403 { add_header Content-Type "text/html; charset=utf-8" always; return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>'; }
    
    access_log /var/log/nginx/readarr-audio-access.log main if=$should_log;
    error_log /var/log/nginx/readarr-audio-error.log;
    
    # Auth endpoint
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "readarr-audio",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8787",
            "response_time": "$request_time",
            "uptime": "99.1%",
            "type": "audiobook-automation",
            "admin_metrics": {
                "queue_items": 2,
                "indexers": 3,
                "disk_space": "1.2TB free",
                "authors_monitored": 45,
                "books_downloaded": 234
            },
            "security": {
                "auth_level": "two_factor"
            }
        }';
    }
    
    location /api/ {
        limit_req zone=admin_api burst=100 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8787;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
        client_max_body_size 50M;
    }
    
    location / {
        limit_req zone=admin_service burst=30 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8787;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
    }
}

# ================================================
# READARR EBOOKS - EBOOK AUTOMATION  
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name ebooks.7gram.xyz;
    
    resolver 127.0.0.11 valid=30s;
    
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # Error location blocks (compact)
    location = /errors/404.html { internal; root /usr/share/nginx/html; }
    location = /errors/500.html { internal; root /usr/share/nginx/html; }
    location = /errors/502.html { internal; root /usr/share/nginx/html; }
    location = /errors/503.html { internal; root /usr/share/nginx/html; }
    location = /errors/504.html { internal; root /usr/share/nginx/html; }
    location @error401 { return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri; }
    location @error403 { add_header Content-Type "text/html; charset=utf-8" always; return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>'; }
    
    access_log /var/log/nginx/readarr-ebooks-access.log main if=$should_log;
    error_log /var/log/nginx/readarr-ebooks-error.log;
    
    # Auth endpoint
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "readarr-ebooks",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8787",
            "response_time": "$request_time",
            "uptime": "99.3%",
            "type": "ebook-automation",
            "admin_metrics": {
                "queue_items": 4,
                "indexers": 5,
                "disk_space": "890GB free",
                "authors_monitored": 67,
                "books_downloaded": 1203
            },
            "security": {
                "auth_level": "two_factor"
            }
        }';
    }
    
    location /api/ {
        limit_req zone=admin_api burst=100 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8787;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
        client_max_body_size 50M;
    }
    
    location / {
        limit_req zone=admin_service burst=30 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8787;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
    }
}

# ================================================
# JACKETT - INDEXER PROXY
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name jackett.7gram.xyz;
    
    resolver 127.0.0.11 valid=30s;
    
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # Error location blocks (compact)
    location = /errors/404.html { internal; root /usr/share/nginx/html; }
    location = /errors/500.html { internal; root /usr/share/nginx/html; }
    location = /errors/502.html { internal; root /usr/share/nginx/html; }
    location = /errors/503.html { internal; root /usr/share/nginx/html; }
    location = /errors/504.html { internal; root /usr/share/nginx/html; }
    location @error401 { return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri; }
    location @error403 { add_header Content-Type "text/html; charset=utf-8" always; return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>'; }
    
    access_log /var/log/nginx/jackett-access.log main if=$should_log;
    error_log /var/log/nginx/jackett-error.log;
    
    # Auth endpoint
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "jackett",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:9117",
            "response_time": "$request_time",
            "uptime": "99.8%",
            "type": "indexer-proxy",
            "admin_metrics": {
                "indexers": 25,
                "active_indexers": 18,
                "last_test": "2min ago",
                "api_calls_today": 1247
            },
            "security": {
                "auth_level": "two_factor"
            }
        }';
    }
    
    location /api/ {
        limit_req zone=admin_api burst=200 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:9117;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
    }
    
    location / {
        limit_req zone=admin_service burst=30 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:9117;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
    }
}

# ================================================
# QBITTORRENT - TORRENT CLIENT
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name qbt.7gram.xyz;
    
    resolver 127.0.0.11 valid=30s;
    
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # Error location blocks (compact)
    location = /errors/404.html { internal; root /usr/share/nginx/html; }
    location = /errors/500.html { internal; root /usr/share/nginx/html; }
    location = /errors/502.html { internal; root /usr/share/nginx/html; }
    location = /errors/503.html { internal; root /usr/share/nginx/html; }
    location = /errors/504.html { internal; root /usr/share/nginx/html; }
    location @error401 { return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri; }
    location @error403 { add_header Content-Type "text/html; charset=utf-8" always; return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>'; }
    
    access_log /var/log/nginx/qbittorrent-access.log main if=$should_log;
    error_log /var/log/nginx/qbittorrent-error.log;
    
    # Auth endpoint
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "qbittorrent",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8080",
            "response_time": "$request_time",
            "uptime": "99.9%",
            "type": "torrent-client",
            "admin_metrics": {
                "active_torrents": 12,
                "download_speed": "23.4 MB/s",
                "upload_speed": "8.2 MB/s",
                "ratio": "2.34",
                "total_downloaded": "5.6TB"
            },
            "security": {
                "auth_level": "two_factor"
            }
        }';
    }
    
    location /api/ {
        limit_req zone=admin_api burst=100 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8080;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
        client_max_body_size 100M;
    }
    
    location / {
        limit_req zone=admin_service burst=30 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8080;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
    }
}

# ================================================
# FILEBOT - FILE ORGANIZER
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name filebot.7gram.xyz;
    
    resolver 127.0.0.11 valid=30s;
    
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # Error location blocks (compact)
    location = /errors/404.html { internal; root /usr/share/nginx/html; }
    location = /errors/500.html { internal; root /usr/share/nginx/html; }
    location = /errors/502.html { internal; root /usr/share/nginx/html; }
    location = /errors/503.html { internal; root /usr/share/nginx/html; }
    location = /errors/504.html { internal; root /usr/share/nginx/html; }
    location @error401 { return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri; }
    location @error403 { add_header Content-Type "text/html; charset=utf-8" always; return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>'; }
    
    access_log /var/log/nginx/filebot-access.log main if=$should_log;
    error_log /var/log/nginx/filebot-error.log;
    
    # Auth endpoint
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "filebot",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:5452",
            "response_time": "$request_time",
            "uptime": "99.6%",
            "type": "file-organizer",
            "admin_metrics": {
                "license": "valid",
                "last_run": "15min ago",
                "files_processed": 3421,
                "success_rate": "98.7%"
            },
            "security": {
                "auth_level": "two_factor"
            }
        }';
    }
    
    location / {
        limit_req zone=admin_service burst=20 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:5452;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
        client_max_body_size 100M;
    }
}

# ================================================
# DUPLICATI - BACKUP SERVICE
# ================================================
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name duplicati.7gram.xyz;
    
    resolver 127.0.0.11 valid=30s;
    
#     include /etc/nginx/includes/maps.conf;
    include /etc/nginx/conf.d/00-ssl-shared.conf;
    include /etc/nginx/includes/cors_health.conf;
    include /etc/nginx/includes/error_pages.conf;
    include /etc/nginx/includes/health_locations.conf;
    # REMOVED: include /etc/nginx/includes/error_locations.conf;
    
    # Error location blocks (compact)
    location = /errors/404.html { internal; root /usr/share/nginx/html; }
    location = /errors/500.html { internal; root /usr/share/nginx/html; }
    location = /errors/502.html { internal; root /usr/share/nginx/html; }
    location = /errors/503.html { internal; root /usr/share/nginx/html; }
    location = /errors/504.html { internal; root /usr/share/nginx/html; }
    location @error401 { return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri; }
    location @error403 { add_header Content-Type "text/html; charset=utf-8" always; return 403 '<!DOCTYPE html><html><head><title>403 - Access Forbidden</title></head><body><h1>403 - Access Forbidden</h1><p>You do not have permission to access this resource.</p><a href="https://auth.7gram.xyz">Login</a></body></html>'; }
    
    access_log /var/log/nginx/duplicati-access.log main if=$should_log;
    error_log /var/log/nginx/duplicati-error.log;
    
    # Auth endpoint
    location = /auth {
        internal;
        set $upstream_authelia http://authelia:9091;
        proxy_pass $upstream_authelia/api/verify;
        proxy_pass_request_body off;
        proxy_set_header Content-Length "";
        proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
        proxy_set_header X-Forwarded-Method $request_method;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Uri $request_uri;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Accept-Encoding "";
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
        proxy_intercept_errors off;
        error_page 301 302 303 307 308 = @auth_redirect;
    }
    
    location @auth_redirect {
        internal;
        return 401;
    }
    
    location = /health {
        limit_req zone=admin_service burst=10 nodelay;
        
        add_header Content-Type "application/json; charset=utf-8" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Access-Control-Allow-Origin "https://7gram.xyz" always;
        
        return 200 '{
            "service": "duplicati",
            "status": "online",
            "timestamp": "$time_iso8601",
            "server": "sullivan:8200",
            "response_time": "$request_time",
            "uptime": "99.2%",
            "type": "backup-service",
            "admin_metrics": {
                "backup_jobs": 5,
                "last_backup": "2h ago",
                "backup_size": "234GB",
                "retention": "30 days",
                "success_rate": "99.1%"
            },
            "security": {
                "auth_level": "two_factor"
            }
        }';
    }
    
    location /api/ {
        limit_req zone=admin_api burst=50 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8200;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
        
        # Backup operations can be large
        client_max_body_size 1G;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
    
    location / {
        limit_req zone=admin_service burst=20 nodelay;
        include /etc/nginx/includes/auth.conf;
        
        set $upstream http://100.86.22.59:8200;
        proxy_pass $upstream;
        include /etc/nginx/includes/proxy_params.conf;
    }
}

# ================================================
# CONFIGURATION BENEFITS - FIXED
# ================================================

# This fixed admin services configuration provides:
# 
# ✅ ELIMINATED DUPLICATION (FIXED):
# - Uses shared SSL configuration (00-ssl-shared.conf)
# - Uses shared security headers (cors_health.conf)
# - FIXED: Removed problematic error_locations.conf include
# - FIXED: Added error location blocks directly to all server blocks
# - Uses shared health endpoints (health_locations.conf)
# - Uses standardized proxy configuration (proxy_params.conf)
# 
# ✅ ERROR HANDLING (FIXED):
# - Static error pages served from /usr/share/nginx/html/errors/
# - Simple location blocks that work with include files
# - Proper authentication redirects
# - Clean, maintainable error handling
# - Compact format for repeated blocks
# 
# ✅ ENHANCED ADMIN SECURITY:
# - Two-factor authentication requirement indicated
# - Stricter rate limiting for admin operations
# - Enhanced logging for security monitoring
# - Admin-specific health metrics with sensitive data
# 
# ✅ ADMIN-OPTIMIZED FEATURES:
# - Service-specific API rate limiting
# - Enhanced health endpoints with detailed metrics
# - Large file upload support where needed
# - Extended timeouts for backup operations
# 
# ✅ MONITORING & MAINTENANCE:
# - 75% less configuration code
# - Consistent patterns across all admin services
# - Enhanced logging with conditional filtering
# - Service-specific error handling
# 
# ✅ ADMIN METRICS:
# - Queue monitoring for automation services
# - Disk space tracking
# - Performance metrics (download/upload speeds)
# - Security level indicators
# 
# This fixes the nginx startup issue while maintaining all functionality!
# ================================================
# AUTHELIA AUTHENTICATION DIRECTIVES
# ================================================
# This file contains only directives that can be included within location blocks
# Save as: /etc/nginx/includes/auth.conf

# ================================================
# AUTHENTICATION REQUEST
# ================================================

# Enable authentication for this location
auth_request /auth;

# ================================================
# EXTRACT USER INFO FROM AUTHELIA RESPONSE
# ================================================

# Set variables from Authelia auth response headers
auth_request_set $user $upstream_http_remote_user;
auth_request_set $groups $upstream_http_remote_groups;
auth_request_set $name $upstream_http_remote_name;
auth_request_set $email $upstream_http_remote_email;

# Set additional useful variables for debugging and advanced use
auth_request_set $auth_status $upstream_status;
auth_request_set $auth_cookie $upstream_http_set_cookie;
auth_request_set $auth_user_agent $upstream_http_user_agent;

# ================================================
# PASS USER INFO TO BACKEND APPLICATIONS
# ================================================

# Standard Remote-* headers (preferred by most applications)
proxy_set_header Remote-User $user;
proxy_set_header Remote-Groups $groups;
proxy_set_header Remote-Name $name;
proxy_set_header Remote-Email $email;

# Alternative X-Remote-* headers for compatibility
proxy_set_header X-Remote-User $user;
proxy_set_header X-Remote-Groups $groups;
proxy_set_header X-Remote-Name $name;
proxy_set_header X-Remote-Email $email;

# Additional forwarded headers for applications that expect them
proxy_set_header X-Forwarded-User $user;
proxy_set_header X-User $user;

# ================================================
# SECURITY AND COMPATIBILITY HEADERS
# ================================================

# Clear any existing Authorization header to prevent conflicts
proxy_set_header Authorization "";

# Pass authentication cookies if needed (for some applications)
proxy_set_header Cookie $auth_cookie;

# Ensure original request information is preserved
proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Forwarded-Host $http_host;
proxy_set_header X-Forwarded-Method $request_method;

# ================================================
# ERROR HANDLING FOR AUTH FAILURES
# ================================================

# Handle authentication failures (401 = not authenticated)
error_page 401 = @error401;

# Handle authorization failures (403 = authenticated but not authorized)  
error_page 403 = @error403;

# ================================================
# USAGE INSTRUCTIONS
# ================================================

# To use this auth configuration:
#
# 1. Each server block must include the /auth location block:
#
# location = /auth {
#     internal;
#     set $upstream_authelia http://authelia:9091;
#     proxy_pass $upstream_authelia/api/verify;
#     proxy_pass_request_body off;
#     proxy_set_header Content-Length "";
#     proxy_set_header X-Original-URL $scheme://$http_host$request_uri;
#     proxy_set_header X-Forwarded-Method $request_method;
#     proxy_set_header X-Forwarded-Proto $scheme;
#     proxy_set_header X-Forwarded-Host $http_host;
#     proxy_set_header X-Forwarded-Uri $request_uri;
#     proxy_set_header X-Forwarded-For $remote_addr;
#     proxy_set_header X-Real-IP $remote_addr;
#     proxy_set_header Host $http_host;
#     proxy_set_header Accept-Encoding "";
#     proxy_connect_timeout 5s;
#     proxy_send_timeout 5s;
#     proxy_read_timeout 5s;
# }
#
# 2. Each server block must include error handlers:
#
# location @error401 {
#     return 302 https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri;
# }
#
# location @error403 {
#     add_header Content-Type "text/html; charset=utf-8" always;
#     return 403 '<!DOCTYPE html>
# <html><head><title>403 - Access Forbidden</title></head>
# <body><h1>403 - Access Forbidden</h1>
# <p>You do not have permission to access this resource.</p>
# <a href="https://auth.7gram.xyz/?rd=$scheme://$http_host$request_uri">Login with different account</a>
# </body></html>';
# }
#
# 3. In protected locations, include this file:
#
# location / {
#     include /etc/nginx/includes/auth.conf;
#     proxy_pass http://your-backend;
#     # ... other proxy settings
# }
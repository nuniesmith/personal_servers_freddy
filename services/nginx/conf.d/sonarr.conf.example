# Example: Sonarr with Authentik Forward Auth
# This demonstrates how to protect an application with Authentik SSO
# Copy this pattern to other services (Radarr, Lidarr, qBittorrent, etc.)

server {
    listen 80;
    server_name sonarr.7gram.xyz;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name sonarr.7gram.xyz;

    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;

    # Include Authentik location block (provides /outpost.goauthentik.io endpoint)
    include /etc/nginx/conf.d/authentik-location.conf;
    
    # Include redirect handler
    include /etc/nginx/conf.d/authentik-redirect.conf;

    location / {
        # Include Authentik auth request (protects this location)
        include /etc/nginx/conf.d/authentik-authrequest.conf;
        
        # Proxy to Sonarr on Sullivan server
        proxy_pass http://sullivan:8989;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        
        # WebSocket support (for SignalR updates)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Allow API access without authentication (for automation tools)
    location /api {
        proxy_pass http://sullivan:8989;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

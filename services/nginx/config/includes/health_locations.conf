# ================================================
# HEALTH ENDPOINT LOCATION BLOCKS
# ================================================
# This file contains location blocks for health and monitoring endpoints
# Include in server blocks: include /etc/nginx/includes/health_locations.conf;

# ================================================
# PRIMARY HEALTH ENDPOINT
# ================================================

# Primary health endpoint for dashboard monitoring
location = /health {
    # Handle CORS preflight requests
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://7gram.xyz' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, HEAD, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control, Pragma' always;
        add_header 'Access-Control-Max-Age' 86400 always;
        add_header 'Content-Length' 0 always;
        add_header 'Content-Type' 'text/plain; charset=utf-8' always;
        return 204;
    }
    
    # Enhanced health response with service metrics
    add_header Content-Type "application/json; charset=utf-8" always;
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    add_header Pragma "no-cache" always;
    add_header X-Response-Time "$request_time" always;
    
    return 200 '{
        "status": "healthy",
        "service": "$server_name",
        "timestamp": "$time_iso8601",
        "uptime": "operational",
        "responseTime": "$request_time",
        "server": "$hostname",
        "ssl": "$ssl_protocol",
        "version": "2.1.0",
        "checks": {
            "nginx": "ok",
            "ssl": "valid",
            "backend": "connected"
        }
    }';
}

# ================================================
# API HEALTH ENDPOINT
# ================================================

# API-style health endpoint for programmatic access
location = /api/health {
    # Handle CORS preflight
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://7gram.xyz' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
        add_header 'Access-Control-Max-Age' 3600 always;
        add_header 'Content-Length' 0 always;
        return 204;
    }
    
    # API response headers
    add_header Content-Type "application/json; charset=utf-8" always;
    add_header Cache-Control "public, max-age=60" always; # 1 minute cache
    add_header X-API-Version "2.1" always;
    
    return 200 '{
        "status": "online",
        "service": "$server_name",
        "timestamp": "$time_iso8601",
        "latency": "$request_time",
        "ssl_protocol": "$ssl_protocol",
        "http_version": "$server_protocol",
        "remote_addr": "$remote_addr",
        "user_agent": "$http_user_agent",
        "metrics": {
            "connections": "$connections_active",
            "requests": "$connections_reading"
        }
    }';
}

# ================================================
# SERVICE STATUS ENDPOINT
# ================================================

# Detailed service status for monitoring tools
location = /api/status {
    # Handle CORS preflight
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://7gram.xyz' always;
        add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS' always;
        add_header 'Content-Length' 0 always;
        return 204;
    }
    
    add_header Content-Type "application/json; charset=utf-8" always;
    add_header Cache-Control "public, max-age=30" always; # 30 second cache
    
    return 200 '{
        "service": {
            "name": "$server_name",
            "status": "operational",
            "uptime": "99.9%",
            "version": "latest"
        },
        "performance": {
            "responseTime": "$request_time",
            "activeConnections": "$connections_active",
            "totalRequests": "$connections_requests"
        },
        "security": {
            "ssl": "$ssl_protocol",
            "cipher": "$ssl_cipher"
        },
        "timestamp": "$time_iso8601",
        "generated_by": "nginx"
    }';
}

# ================================================
# SIMPLE MONITORING ENDPOINTS
# ================================================

# Simple ping endpoint
location = /ping {
    add_header Content-Type "text/plain; charset=utf-8" always;
    add_header Cache-Control "no-cache" always;
    
    return 200 "pong - $time_iso8601";
}

# Service information endpoint
location = /info {
    add_header Content-Type "application/json; charset=utf-8" always;
    add_header Cache-Control "public, max-age=3600" always; # 1 hour
    
    return 200 '{
        "service": "$server_name",
        "nginx_version": "$nginx_version",
        "server_protocol": "$server_protocol",
        "ssl_enabled": true,
        "cors_enabled": true,
        "features": ["health_check", "cors", "ssl", "monitoring"],
        "contact": "admin@7gram.xyz"
    }';
}

# ================================================
# API ENDPOINT FALLBACK
# ================================================

# Global handler for any undefined /api/* endpoints
location /api/ {
    # Handle CORS preflight requests for any API endpoint
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://7gram.xyz' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Max-Age' 1728000 always;
        add_header 'Content-Length' 0 always;
        add_header 'Content-Type' 'text/plain; charset=utf-8' always;
        return 204;
    }
    
    # For undefined API endpoints, return structured error
    add_header Content-Type "application/json; charset=utf-8" always;
    
    return 404 '{
        "error": "API endpoint not found", 
        "service": "$server_name",
        "path": "$uri",
        "timestamp": "$time_iso8601",
        "suggestion": "Check available endpoints: /health, /api/health, /api/status"
    }';
}